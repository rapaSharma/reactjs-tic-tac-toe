{"version":3,"sources":["components/square.js","components/board.js","calculateWinner.js","components/game.js","index.js"],"names":["Square","props","className","highlight","onClick","value","Board","squaresToBeHighlighted","squareNumber","i","length","c","r","key","this","squares","highlightSquare","boardRowContent","push","renderSquare","boardContent","renderBoardRow","renderBoard","React","Component","calculateWinner","lines","a","b","Game","state","history","Array","fill","location","stepNumber","xIsNext","movesInAscendingOrder","setState","slice","concat","step","winner","markedSquares","orderedMoves","reversed","current","status","getStatus","moves","map","move","desc","jumpTo","reverse","order","toggleOrder","handleClick","getMovesList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24a2dc21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className={`square ${ props.highlight ? ' hightlilght-square' : '' }`} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './square.js';\r\n\r\nclass Board extends React.Component {\r\n    highlightSquare(squaresToBeHighlighted, squareNumber) {\r\n        if (squaresToBeHighlighted) {\r\n            for (let i = 0; i < squaresToBeHighlighted.length; i++) {\r\n                if (squaresToBeHighlighted[i] === squareNumber) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    renderSquare(c, r) {\r\n        const i = c + r;\r\n        return <Square\r\n            key={i}\r\n            value={this.props.squares[i]}\r\n            highlight={this.highlightSquare(this.props.squaresToBeHighlighted, i)}\r\n            onClick={() => this.props.onClick(c, r, i)}\r\n        />;\r\n    }\r\n\r\n    renderBoardRow(r) {\r\n        let boardRowContent = [];\r\n        for (let c = 0; c < 3; c++) {\r\n            boardRowContent.push(this.renderSquare(c, r));\r\n        }\r\n        return <div className=\"board-row\">{boardRowContent}</div>;\r\n    }\r\n\r\n    renderBoard() {\r\n        let boardContent = [];\r\n        for (let r = 0; r < 9; r = r + 3) {\r\n            boardContent.push(this.renderBoardRow(r));\r\n        }\r\n        return <div>{boardContent}</div>;\r\n    }\r\n\r\n    render() {\r\n        return this.renderBoard();\r\n    }\r\n}\r\n\r\n\r\nexport default Board;\r\n","export default function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return [squares[a], lines[i]];\r\n        }\r\n    }\r\n    return [null, null];\r\n}\r\n","import React from 'react';\r\nimport '../index.css';\r\nimport Board from './board.js';\r\nimport calculateWinner from '../calculateWinner.js';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        location: null,\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      squaresToBeHighlighted: Array(3).fill(null),\r\n      movesInAscendingOrder: true,\r\n    };\r\n  }\r\n\r\n  toggleOrder() {\r\n    this.setState({\r\n      movesInAscendingOrder: !this.state.movesInAscendingOrder\r\n    });\r\n  }\r\n\r\n  handleClick(c, r, i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const winner = calculateWinner(squares);\r\n    if (winner[0] || squares[i]) {\r\n      return null;\r\n    }\r\n    const location = '(' + c + ',' + r / 3 + ')';\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        location: location,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  getStatus(squares, winner) {\r\n    let markedSquares = [];\r\n    for (let i = 0; i < squares.length; i++) {\r\n      if (squares[i] !== null) {\r\n        markedSquares[markedSquares.length] = squares[i];\r\n      }\r\n    }\r\n    if (winner) {\r\n      return 'Winner: ' + winner;\r\n    } else if (markedSquares.length === 9) {\r\n      return 'Match drawn';\r\n    } else {\r\n      return 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n  }\r\n\r\n  getMovesList(orderedMoves) {\r\n    return this.state.movesInAscendingOrder\r\n      ? <ul>{orderedMoves}</ul>\r\n      : <ul reversed>{orderedMoves}</ul>;\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const squares = current.squares.slice();\r\n    const winner = calculateWinner(squares);\r\n    const status = this.getStatus(squares, winner[0]);\r\n    const moves = history\r\n      .map((step, move) => {\r\n        const desc = move\r\n          ? 'Go to move #' + move\r\n          : 'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button className={`${move === this.state.stepNumber ? \"highlightLatestMove\" : \"\"}`}\r\n              onClick={() => this.jumpTo(move)}>{desc}</button>{step.location}\r\n          </li>\r\n        );\r\n      });\r\n    const orderedMoves = this.state.movesInAscendingOrder ? moves : moves.reverse();\r\n    const order = this.state.movesInAscendingOrder ? \"Descending\" : \"Ascending\";\r\n    return (\r\n      <div>\r\n        <button className=\"sort-order\" onClick={() => this.toggleOrder()}>Sort {order}</button>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              squares={current.squares}\r\n              squaresToBeHighlighted={winner[1]}\r\n              onClick={(c, r, i) => this.handleClick(c, r, i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            {this.getMovesList(orderedMoves)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/game.js';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}